package engine.io;

import org.lwjgl.glfw.GLFW;
import org.lwjgl.glfw.GLFWVidMode;
import org.lwjgl.opengl.GL;

public class Window {
	public int width, height;
	public String title;
	private long window;
	public int frames;
	public long time;
	private Input input = new Input();
	private float[] rgbBackground = new float[3];
	
	public Window(int width, int height, String title) {
		this.width = width;
		this.height = height;
		this.title = title;
	}
	
	public void create() {
		if (!GLFW.glfwInit()) {
			System.err.println("ERROR: GFLW not initialized");
			return;
		} 
		
		window = GLFW.glfwCreateWindow(width, height, title, 0, 0);
		
		if (window == 0) {
			System.err.println("ERROR: window not created");
			return;
		}
		
		GLFWVidMode videoMode = GLFW.glfwGetVideoMode(GLFW.glfwGetPrimaryMonitor());
	    GLFW.glfwSetWindowPos(window, (videoMode.width()-width)/2, (videoMode.height()-height)/2);
	    GLFW.glfwMakeContextCurrent(window);
	    GL.createCapabilities();
	    
	    GLFW.glfwSetKeyCallback(window,input.getKeyBoard());
	    GLFW.glfwSetMouseButtonCallback(window, input.getMouseButton());
	    GLFW.glfwSetCursorPosCallback(window, input.getCursorMove());
	    
	    GLFW.glfwShowWindow(window);
	    
	    GLFW.glfwSwapInterval(1);

		time = System.currentTimeMillis();
	}
	
	public void update() {
		GLFW.glfwPollEvents();
		frames ++;
		if (System.currentTimeMillis() > time + 1000) {
			GLFW.glfwSetWindowTitle(window, String.format("%s, FPS:%d",title, frames));
			time = System.currentTimeMillis();
			frames = 0;
		}
	}
	
	public void swapBuffers() {
		GLFW.glfwSwapBuffers(window);
	}
	
	public boolean shouldClose() {
		return GLFW.glfwWindowShouldClose(window);
	}
	
	public void destroy() {
		input.destroy();
		GLFW.glfwWindowShouldClose(window);
		GLFW.glfwDestroyWindow(window);
		GLFW.glfwTerminate();
	}
}
